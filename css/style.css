/* ===================================================================== */
/* === STYLE.CSS - PHIÊN BẢN SỬA LỖI & CẢI TIẾN GIAO DIỆN === */
/* ===================================================================== */

:root {
    --bg-dark: #0D1117;
    --bg-light: #161B22;
    --card: #1A2029;
    --border: rgba(255, 255, 255, 0.08);
    --muted: #8B949E;
    --text: #C9D1D9;
    --accent-blue: #58A6FF;
    --accent-purple: #A37BFF;
    --accent-green: #3FB950;
    --accent-red: #F85149;
    --radius-lg: 16px;
    --radius-md: 10px;
    --shadow-glow: 0 0 40px rgba(88, 166, 255, 0.15);
}

* {
    box-sizing: border-box;
}

html,
body {
    height: 100%;
}

body {
    margin: 0;
    background: var(--bg-dark);
    color: var(--text);
    font: 16px/1.5 'Inter', system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
}

a {
    color: var(--accent-blue);
    text-decoration: none;
}
a:hover {
    text-decoration: underline;
}

.wrap {
    max-width: 1024px;
    margin: 0 auto;
    padding: 24px;
}

/* --- HEADER --- */
header {
    position: sticky;
    top: 0;
    backdrop-filter: saturate(150%) blur(10px);
    background: rgba(13, 17, 23, 0.7);
    border-bottom: 1px solid var(--border);
    z-index: 10;
}

.nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 16px;
}

.brand {
    display: flex;
    align-items: center;
    gap: 10px;
    font-weight: 700;
    font-size: 18px;
    letter-spacing: .2px;
}

.brand i {
    font-size: 24px;
    background: linear-gradient(45deg, var(--accent-blue), var(--accent-purple));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

/* --- BUTTONS --- */
.btn {
    appearance: none;
    border: 0;
    border-radius: 999px;
    padding: 12px 20px;
    color: #fff;
    background: linear-gradient(90deg, var(--accent-blue), var(--accent-purple));
    font-weight: 700;
    display: inline-flex;
    align-items: center;
    justify-content: center; /* Thêm để căn giữa icon khi chỉ có icon */
    gap: 8px;
    cursor: pointer;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    transition: all 0.2s ease;
    white-space: nowrap; /* Ngăn text trên nút bị xuống dòng */
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
}

.btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

.btn.ghost {
    background: transparent;
    color: var(--text);
    border: 1px solid var(--border);
    box-shadow: none;
}

.btn.ghost:hover {
    background: rgba(255, 255, 255, 0.05);
    border-color: rgba(255, 255, 255, 0.15);
}


/* --- MAIN LAYOUT & CARDS (PHẦN SỬA LỖI) --- */
main {
    padding-top: 40px;
    padding-bottom: 40px;
}

.grid {
    display: grid;
    grid-template-columns: 1.2fr 0.8fr; /* Bố cục 2 cột với tỉ lệ */
    gap: 24px;
}

/* SỬA LỖI QUAN TRỌNG: Ngăn nội dung bên trong card làm vỡ layout grid */
.grid > .card {
    min-width: 0;
}

/* Bố cục responsive: chuyển thành 1 cột trên màn hình nhỏ */
@media (max-width: 900px) {
    .grid {
        grid-template-columns: 1fr; /* Chỉ 1 cột */
    }
}

.card {
    background: radial-gradient(1000px 300px at 50% -50px, rgba(88, 166, 255, .1), transparent 80%), var(--card);
    border: 1px solid var(--border);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-glow);
    padding: 24px 28px;
    /* Thêm flexbox để quản lý layout bên trong card dễ hơn */
    display: flex;
    flex-direction: column;
    gap: 16px; /* Khoảng cách mặc định giữa các phần tử con */
}

/* --- TYPOGRAPHY & CONTENT --- */
h1 {
    font-size: 32px;
    margin: 0; /* Xóa margin mặc định */
    font-weight: 700;
    line-height: 1.2;
}

.title-gradient {
    font-size: 28px;
    background: linear-gradient(90deg, #f7b733, #fc4a1a);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}


.sub {
    color: var(--muted);
    font-size: 15px;
    max-width: 100%; /* Sửa để không bị tràn */
    margin: 0;
}

.panel {
    display: flex;
    gap: 12px;
    flex-wrap: wrap;
    margin: 0; /* Xóa margin mặc định */
}

.chip {
    border: 1px solid var(--border);
    padding: 8px 14px;
    border-radius: 999px;
    color: var(--muted);
    font-size: 13px;
    background: rgba(255, 255, 255, 0.03);
}

.out {
    background: var(--bg-light);
    border: 1px solid var(--border);
    border-radius: var(--radius-md);
    padding: 16px;
    word-break: break-all;
    transition: all 0.2s ease;
}

.muted {
    color: var(--muted);
    font-size: 14px;
}

.mono {
    font-family: 'SF Mono', 'Menlo', 'Monaco', 'Consolas', monospace;
    font-size: 14px;
    color: #a5d6ff;
}

.row {
    display: flex;
    flex-wrap: wrap; /* Cho phép xuống dòng nếu không đủ chỗ */
    align-items: center;
    gap: 12px;
    justify-content: space-between;
    width: 100%;
}

.col {
    display: flex;
    flex-direction: column;
    gap: 12px; /* Giảm gap để nhất quán */
}

.hidden {
    display: none !important;
}

/* --- UI ELEMENTS & STATUS --- */
.badge {
    display: inline-flex;
    align-items: center;
    gap: 6px;
    padding: 6px 12px;
    border-radius: 999px;
    background: rgba(163, 123, 255, .1);
    border: 1px solid rgba(163, 123, 255, .2);
    font-size: 13px;
    font-weight: 600;
    white-space: nowrap;
}

.badge i {
    color: var(--accent-purple);
}

#imageCanvas {
    background: var(--bg-light);
    border-radius: var(--radius-md);
    border: 1px dashed var(--border);
    max-width: 100%;
    height: auto;
}

#result {
    transition: all 0.3s ease-in-out;
}

/* --- ANIMATIONS --- */
.spin {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* --- NFT COLLECTION STYLING --- */
#mintsContainer {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
}

#mintsContainer .muted {
    width: 100%;
    text-align: center;
    padding: 20px 0;
}

.nft-item, .nft-placeholder, .nft-error {
    width: 80px;
    height: 80px;
    border-radius: var(--radius-md);
    background: var(--bg-light);
    border: 1px solid var(--border);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    color: var(--muted);
    flex-shrink: 0;
}

.nft-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: var(--radius-md);
    transition: transform 0.2s ease-in-out;
}

.nft-item img:hover {
    transform: scale(1.08);
    cursor: pointer;
}

.nft-error {
    background-color: rgba(248, 81, 73, 0.1);
    border-color: rgba(248, 81, 73, 0.3);
    color: var(--accent-red);
}


/* --- MODAL PREVIEW STYLING --- */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(13, 17, 23, 0.8);
    backdrop-filter: blur(8px);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    opacity: 0;
    animation: fadeIn 0.3s forwards;
}

@keyframes fadeIn {
    to { opacity: 1; }
}

.modal-content {
    background: var(--card);
    padding: 30px;
    border-radius: var(--radius-lg);
    border: 1px solid var(--border);
    box-shadow: 0 15px 50px rgba(0, 0, 0, 0.4);
    position: relative;
    text-align: center;
    transform: scale(0.95);
    animation: scaleIn 0.3s forwards;
}
@keyframes scaleIn {
    to { transform: scale(1); }
}

.modal-content h2 {
    margin-top: 0;
    margin-bottom: 20px;
}

#previewImage {
    max-width: 90vw;
    max-height: 80vh;
    width: auto;
    height: auto;
    border-radius: var(--radius-md);
    border: 1px solid var(--border);
}

.modal-close {
    position: absolute;
    top: 15px;
    right: 15px;
    font-size: 28px;
    color: var(--muted);
    cursor: pointer;
    transition: color 0.2s;
}

.modal-close:hover {
    color: var(--text);
}


/* --- SITE FOOTER --- */
.site-footer {
    border-top: 1px solid var(--border);
    padding: 40px 0;
    margin-top: 40px;
    text-align: center;
    color: var(--muted);
}

.site-footer p {
    margin: 5px 0;
    font-size: 14px;
}

.creator-name {
    font-weight: 600;
    background: linear-gradient(90deg, var(--accent-blue), var(--accent-purple));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.sub-footer {
    font-size: 12px;
    opacity: 0.7;
}

hr {
    border: none;
    height: 1px;
    background-color: var(--border);
    margin: 24px 0;
    width: 100%;
}

/* ===================================================================== */
/* === HIỆU ỨNG VIỀN ÁNH SÁNG CHO MODAL PREVIEW === */
/* ===================================================================== */

/* 
   Thêm class 'animated-border' vào thẻ <div class="modal-content">
   trong file index.html để kích hoạt hiệu ứng này.
*/

.animated-border {
    position: relative;
    overflow: hidden; /* Quan trọng: để che giấu phần thừa của pseudo-element */
}

/* 
   Tạo một pseudo-element ::before để làm lớp nền gradient.
   Nó sẽ lớn hơn một chút so với card và quay liên tục.
*/
.animated-border::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 200%; /* Lớn hơn card để hiệu ứng gradient mượt mà khi quay */
    height: 200%;
    background: conic-gradient(
        transparent 270deg,
        var(--accent-purple),
        var(--accent-blue)
    );
    
    /* Animation để quay lớp gradient */
    animation: rotate-border 4s linear infinite;
}

/* 
   Tạo một pseudo-element ::after để che đi phần giữa,
   chỉ để lại phần viền. Nó sẽ có màu nền của card.
*/
.animated-border::after {
    content: '';
    position: absolute;
    top: 2px; /* Khoảng cách này tạo ra độ dày của viền */
    left: 2px;
    right: 2px;
    bottom: 2px;
    background: var(--card); /* Màu nền phải giống màu của modal-content */
    border-radius: var(--radius-lg); /* Bo góc giống hệt modal-content */
    z-index: 1; /* Đảm bảo nó nằm trên lớp gradient quay */
}

/* 
   Đảm bảo nội dung thực của modal (h2, img, nút close) 
   luôn nằm trên cả hai lớp pseudo-element.
*/
.modal-content > * {
    position: relative;
    z-index: 2;
}

/* Định nghĩa animation quay */
@keyframes rotate-border {
    0% {
        transform: translate(-50%, -50%) rotate(0deg);
    }
    100% {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}



/* ===================================================================== */
/* === HIỆU ỨNG VIỀN ÁNH SÁNG CHO KHUNG KẾT QUẢ (RESULT BOX) === */
/* ===================================================================== */

/* Ghi đè lại class .out để chuẩn bị cho hiệu ứng trên #result */
#result.out {
    position: relative; /* Bắt buộc để định vị các lớp hiệu ứng */
    overflow: hidden;   /* Bắt buộc để che phần gradient thừa */
    border: 1px solid transparent; /* Ẩn viền cũ đi nhưng vẫn giữ layout */
    /* Tăng nhẹ padding để nội dung không bị quá sát viền hiệu ứng */
    padding: 18px; 
}

/* Lớp tạo hiệu ứng ánh sáng quay */
#result.out::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 250%; 
    height: 250%;
    background: conic-gradient(
        transparent 270deg,
        var(--accent-blue),
        var(--accent-purple)
    );
    animation: rotate-border 4s linear infinite;
}
    
/* Lớp che bên trong để tạo ra dải viền */
#result.out::after {
    content: '';
    position: absolute;
    z-index: 1;
    top: 2px; /* Độ dày của viền là 2px */
    left: 2px;
    right: 2px;
    bottom: 2px;
    background: var(--bg-light); /* Màu nền của khung .out */
    border-radius: calc(var(--radius-md) - 2px); /* Bo góc bên trong, nhỏ hơn 1 chút */
}

/* Đảm bảo nội dung (text, ảnh) của #result nằm trên cùng */
#result.out > * {
    position: relative;
    z-index: 2;
}